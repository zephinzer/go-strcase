stages:
  - deps
  - test
  - release

image: golang:1.17.1-alpine3.14
variables:
  GOPATH: $CI_PROJECT_DIR/.go

deps:
  stage: deps
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - ./vendor
      - ./.go
  artifacts:
    expire_in: 1 week
    paths:
      - ./vendor
  script:
    - go mod vendor
    - go mod tidy

unit:
  stage: test
  dependencies: [deps]
  before_script:
    - apk add g++
    - go get github.com/boumenot/gocover-cobertura
  artifacts:
    reports:
      cobertura: reports/coverage.xml
  script:
    - go test -v -mod=mod -covermode=atomic -coverpkg=. -coverprofile=./reports/coverage.out .
    - .go/bin/gocover-cobertura < ./reports/coverage.out > ./reports/coverage.xml

security:
  stage: test
  dependencies: [deps]
  artifacts:
    reports:
      sast: reports/sast.json
  before_script:
    - apk add curl
    - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GOPATH/bin latest
  script:
    - go mod vendor
    - .go/bin/gosec -fmt json -out reports/sast.json .
